
ProyectoFinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001082  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000100e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800100  00800100  00001082  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001082  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001298  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b9  00000000  00000000  00002494  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a16  00000000  00000000  00002e4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000370  00000000  00000000  00003864  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000566  00000000  00000000  00003bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a98  00000000  00000000  0000413a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004bd2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      10:	0c 94 d6 02 	jmp	0x5ac	; 0x5ac <__vector_4>
      14:	0c 94 87 01 	jmp	0x30e	; 0x30e <__vector_5>
      18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	21 e0       	ldi	r18, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	aa 31       	cpi	r26, 0x1A	; 26
      80:	b2 07       	cpc	r27, r18
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
      84:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
      88:	0c 94 05 08 	jmp	0x100a	; 0x100a <_exit>

0000008c <__bad_interrupt>:
      8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <initADC>:


//Funcion de escritura de un caracter
void writeUART(char data){
	while(!(UCSR0A & (1<<UDRE0)));  //hasta que la bandera este en 1
	UDR0 = data;
      90:	ec e7       	ldi	r30, 0x7C	; 124
      92:	f0 e0       	ldi	r31, 0x00	; 0
      94:	80 81       	ld	r24, Z
      96:	80 64       	ori	r24, 0x40	; 64
      98:	80 83       	st	Z, r24
      9a:	80 81       	ld	r24, Z
      9c:	8f 77       	andi	r24, 0x7F	; 127
      9e:	80 83       	st	Z, r24
      a0:	80 81       	ld	r24, Z
      a2:	8f 7d       	andi	r24, 0xDF	; 223
      a4:	80 83       	st	Z, r24
      a6:	ea e7       	ldi	r30, 0x7A	; 122
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	87 60       	ori	r24, 0x07	; 7
      ae:	80 83       	st	Z, r24
      b0:	80 81       	ld	r24, Z
      b2:	80 68       	ori	r24, 0x80	; 128
      b4:	80 83       	st	Z, r24
      b6:	ee e7       	ldi	r30, 0x7E	; 126
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	80 81       	ld	r24, Z
      bc:	87 60       	ori	r24, 0x07	; 7
      be:	80 83       	st	Z, r24
      c0:	08 95       	ret

000000c2 <adcread>:
      c2:	ec e7       	ldi	r30, 0x7C	; 124
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	90 81       	ld	r25, Z
      c8:	90 7f       	andi	r25, 0xF0	; 240
      ca:	89 2b       	or	r24, r25
      cc:	80 83       	st	Z, r24
      ce:	ea e7       	ldi	r30, 0x7A	; 122
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	80 81       	ld	r24, Z
      d4:	80 64       	ori	r24, 0x40	; 64
      d6:	80 83       	st	Z, r24
      d8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
      dc:	86 fd       	sbrc	r24, 6
      de:	fc cf       	rjmp	.-8      	; 0xd8 <adcread+0x16>
      e0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
      e4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
      e8:	08 95       	ret

000000ea <EEPROM_write>:
      ea:	f9 99       	sbic	0x1f, 1	; 31
      ec:	fe cf       	rjmp	.-4      	; 0xea <EEPROM_write>
      ee:	92 bd       	out	0x22, r25	; 34
      f0:	81 bd       	out	0x21, r24	; 33
      f2:	60 bd       	out	0x20, r22	; 32
      f4:	8f b3       	in	r24, 0x1f	; 31
      f6:	84 60       	ori	r24, 0x04	; 4
      f8:	8f bb       	out	0x1f, r24	; 31
      fa:	8f b3       	in	r24, 0x1f	; 31
      fc:	82 60       	ori	r24, 0x02	; 2
      fe:	8f bb       	out	0x1f, r24	; 31
     100:	08 95       	ret

00000102 <EEPROM_read>:
     102:	f9 99       	sbic	0x1f, 1	; 31
     104:	fe cf       	rjmp	.-4      	; 0x102 <EEPROM_read>
     106:	92 bd       	out	0x22, r25	; 34
     108:	81 bd       	out	0x21, r24	; 33
     10a:	8f b3       	in	r24, 0x1f	; 31
     10c:	81 60       	ori	r24, 0x01	; 1
     10e:	8f bb       	out	0x1f, r24	; 31
     110:	80 b5       	in	r24, 0x20	; 32
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	08 95       	ret

00000116 <initUART>:
     116:	8a b1       	in	r24, 0x0a	; 10
     118:	8e 7f       	andi	r24, 0xFE	; 254
     11a:	8a b9       	out	0x0a, r24	; 10
     11c:	8a b1       	in	r24, 0x0a	; 10
     11e:	82 60       	ori	r24, 0x02	; 2
     120:	8a b9       	out	0x0a, r24	; 10
     122:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     126:	e1 ec       	ldi	r30, 0xC1	; 193
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	10 82       	st	Z, r1
     12c:	80 81       	ld	r24, Z
     12e:	88 69       	ori	r24, 0x98	; 152
     130:	80 83       	st	Z, r24
     132:	e2 ec       	ldi	r30, 0xC2	; 194
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	10 82       	st	Z, r1
     138:	80 81       	ld	r24, Z
     13a:	86 60       	ori	r24, 0x06	; 6
     13c:	80 83       	st	Z, r24
     13e:	87 e6       	ldi	r24, 0x67	; 103
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     146:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     14a:	08 95       	ret

0000014c <main>:
     14c:	f8 94       	cli
     14e:	8a b1       	in	r24, 0x0a	; 10
     150:	83 7e       	andi	r24, 0xE3	; 227
     152:	8a b9       	out	0x0a, r24	; 10
     154:	8b b1       	in	r24, 0x0b	; 11
     156:	8c 61       	ori	r24, 0x1C	; 28
     158:	8b b9       	out	0x0b, r24	; 11
     15a:	87 b1       	in	r24, 0x07	; 7
     15c:	8f 7c       	andi	r24, 0xCF	; 207
     15e:	87 b9       	out	0x07, r24	; 7
     160:	88 b1       	in	r24, 0x08	; 8
     162:	80 63       	ori	r24, 0x30	; 48
     164:	88 b9       	out	0x08, r24	; 8
     166:	84 b1       	in	r24, 0x04	; 4
     168:	80 61       	ori	r24, 0x10	; 16
     16a:	84 b9       	out	0x04, r24	; 4
     16c:	84 b1       	in	r24, 0x04	; 4
     16e:	81 60       	ori	r24, 0x01	; 1
     170:	84 b9       	out	0x04, r24	; 4
     172:	8a b1       	in	r24, 0x0a	; 10
     174:	80 68       	ori	r24, 0x80	; 128
     176:	8a b9       	out	0x0a, r24	; 10
     178:	e8 e6       	ldi	r30, 0x68	; 104
     17a:	f0 e0       	ldi	r31, 0x00	; 0
     17c:	80 81       	ld	r24, Z
     17e:	84 60       	ori	r24, 0x04	; 4
     180:	80 83       	st	Z, r24
     182:	ad e6       	ldi	r26, 0x6D	; 109
     184:	b0 e0       	ldi	r27, 0x00	; 0
     186:	8c 91       	ld	r24, X
     188:	8c 61       	ori	r24, 0x1C	; 28
     18a:	8c 93       	st	X, r24
     18c:	80 81       	ld	r24, Z
     18e:	82 60       	ori	r24, 0x02	; 2
     190:	80 83       	st	Z, r24
     192:	ec e6       	ldi	r30, 0x6C	; 108
     194:	f0 e0       	ldi	r31, 0x00	; 0
     196:	80 81       	ld	r24, Z
     198:	80 63       	ori	r24, 0x30	; 48
     19a:	80 83       	st	Z, r24
     19c:	0e 94 48 00 	call	0x90	; 0x90 <initADC>
     1a0:	0e 94 8b 00 	call	0x116	; 0x116 <initUART>
     1a4:	0e 94 67 04 	call	0x8ce	; 0x8ce <initPWM1>
     1a8:	60 e0       	ldi	r22, 0x00	; 0
     1aa:	74 e0       	ldi	r23, 0x04	; 4
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	0e 94 31 04 	call	0x862	; 0x862 <initPWM0A>
     1b2:	60 e0       	ldi	r22, 0x00	; 0
     1b4:	74 e0       	ldi	r23, 0x04	; 4
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	0e 94 45 05 	call	0xa8a	; 0xa8a <initPWM2A>
     1bc:	78 94       	sei
     1be:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     1c2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     1c6:	89 2b       	or	r24, r25
     1c8:	09 f0       	breq	.+2      	; 0x1cc <main+0x80>
     1ca:	70 c0       	rjmp	.+224    	; 0x2ac <main+0x160>
     1cc:	85 b1       	in	r24, 0x05	; 5
     1ce:	80 61       	ori	r24, 0x10	; 16
     1d0:	85 b9       	out	0x05, r24	; 5
     1d2:	85 b1       	in	r24, 0x05	; 5
     1d4:	8e 7f       	andi	r24, 0xFE	; 254
     1d6:	85 b9       	out	0x05, r24	; 5
     1d8:	8b b1       	in	r24, 0x0b	; 11
     1da:	8f 77       	andi	r24, 0x7F	; 127
     1dc:	8b b9       	out	0x0b, r24	; 11
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	0e 94 61 00 	call	0xc2	; 0xc2 <adcread>
     1e4:	bc 01       	movw	r22, r24
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     1ee:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <adcvalue1>
     1f2:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <adcvalue1+0x1>
     1f6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <adcvalue1+0x2>
     1fa:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <adcvalue1+0x3>
     1fe:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <writecanalA>
     202:	8f e3       	ldi	r24, 0x3F	; 63
     204:	9c e9       	ldi	r25, 0x9C	; 156
     206:	01 97       	sbiw	r24, 0x01	; 1
     208:	f1 f7       	brne	.-4      	; 0x206 <main+0xba>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0xc0>
     20c:	00 00       	nop
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	0e 94 61 00 	call	0xc2	; 0xc2 <adcread>
     214:	bc 01       	movw	r22, r24
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     21e:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <adcvalue2>
     222:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <adcvalue2+0x1>
     226:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <adcvalue2+0x2>
     22a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <adcvalue2+0x3>
     22e:	0e 94 13 05 	call	0xa26	; 0xa26 <writecanalB>
     232:	8f e3       	ldi	r24, 0x3F	; 63
     234:	9c e9       	ldi	r25, 0x9C	; 156
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <main+0xea>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0xf0>
     23c:	00 00       	nop
     23e:	82 e0       	ldi	r24, 0x02	; 2
     240:	0e 94 61 00 	call	0xc2	; 0xc2 <adcread>
     244:	bc 01       	movw	r22, r24
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     24e:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <adcvalue3>
     252:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <adcvalue3+0x1>
     256:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcvalue3+0x2>
     25a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcvalue3+0x3>
     25e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     262:	86 2f       	mov	r24, r22
     264:	0e 94 c6 05 	call	0xb8c	; 0xb8c <updateDutyCA2>
     268:	8f e3       	ldi	r24, 0x3F	; 63
     26a:	9c e9       	ldi	r25, 0x9C	; 156
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <main+0x120>
     270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x126>
     272:	00 00       	nop
     274:	83 e0       	ldi	r24, 0x03	; 3
     276:	0e 94 61 00 	call	0xc2	; 0xc2 <adcread>
     27a:	bc 01       	movw	r22, r24
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     284:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <adcvalue4>
     288:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <adcvalue4+0x1>
     28c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <adcvalue4+0x2>
     290:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <adcvalue4+0x3>
     294:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     298:	86 2f       	mov	r24, r22
     29a:	0e 94 4b 04 	call	0x896	; 0x896 <updateDutyCA>
     29e:	8f e3       	ldi	r24, 0x3F	; 63
     2a0:	9c e9       	ldi	r25, 0x9C	; 156
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	f1 f7       	brne	.-4      	; 0x2a2 <main+0x156>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x15c>
     2a8:	00 00       	nop
     2aa:	89 cf       	rjmp	.-238    	; 0x1be <main+0x72>
     2ac:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     2b0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	51 f4       	brne	.+20     	; 0x2cc <main+0x180>
     2b8:	8b b1       	in	r24, 0x0b	; 11
     2ba:	8f 77       	andi	r24, 0x7F	; 127
     2bc:	8b b9       	out	0x0b, r24	; 11
     2be:	85 b1       	in	r24, 0x05	; 5
     2c0:	8f 7e       	andi	r24, 0xEF	; 239
     2c2:	85 b9       	out	0x05, r24	; 5
     2c4:	85 b1       	in	r24, 0x05	; 5
     2c6:	81 60       	ori	r24, 0x01	; 1
     2c8:	85 b9       	out	0x05, r24	; 5
     2ca:	79 cf       	rjmp	.-270    	; 0x1be <main+0x72>
     2cc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     2d0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     2d4:	02 97       	sbiw	r24, 0x02	; 2
     2d6:	51 f4       	brne	.+20     	; 0x2ec <main+0x1a0>
     2d8:	85 b1       	in	r24, 0x05	; 5
     2da:	8f 7e       	andi	r24, 0xEF	; 239
     2dc:	85 b9       	out	0x05, r24	; 5
     2de:	85 b1       	in	r24, 0x05	; 5
     2e0:	8e 7f       	andi	r24, 0xFE	; 254
     2e2:	85 b9       	out	0x05, r24	; 5
     2e4:	8b b1       	in	r24, 0x0b	; 11
     2e6:	80 68       	ori	r24, 0x80	; 128
     2e8:	8b b9       	out	0x0b, r24	; 11
     2ea:	69 cf       	rjmp	.-302    	; 0x1be <main+0x72>
     2ec:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     2f0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     2f4:	03 97       	sbiw	r24, 0x03	; 3
     2f6:	09 f0       	breq	.+2      	; 0x2fa <main+0x1ae>
     2f8:	62 cf       	rjmp	.-316    	; 0x1be <main+0x72>
     2fa:	85 b1       	in	r24, 0x05	; 5
     2fc:	8f 7e       	andi	r24, 0xEF	; 239
     2fe:	85 b9       	out	0x05, r24	; 5
     300:	85 b1       	in	r24, 0x05	; 5
     302:	8e 7f       	andi	r24, 0xFE	; 254
     304:	85 b9       	out	0x05, r24	; 5
     306:	8b b1       	in	r24, 0x0b	; 11
     308:	8f 77       	andi	r24, 0x7F	; 127
     30a:	8b b9       	out	0x0b, r24	; 11
     30c:	58 cf       	rjmp	.-336    	; 0x1be <main+0x72>

0000030e <__vector_5>:
	
}
/************************************************************************************
*	INTERRUPCIONES
*************************************************************************************/
ISR(PCINT2_vect){
     30e:	1f 92       	push	r1
     310:	0f 92       	push	r0
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	0f 92       	push	r0
     316:	11 24       	eor	r1, r1
     318:	2f 93       	push	r18
     31a:	3f 93       	push	r19
     31c:	4f 93       	push	r20
     31e:	5f 93       	push	r21
     320:	6f 93       	push	r22
     322:	7f 93       	push	r23
     324:	8f 93       	push	r24
     326:	9f 93       	push	r25
     328:	af 93       	push	r26
     32a:	bf 93       	push	r27
     32c:	ef 93       	push	r30
     32e:	ff 93       	push	r31
	if (!(PIND & (1<<PIND4)))
     330:	4c 99       	sbic	0x09, 4	; 9
     332:	14 c0       	rjmp	.+40     	; 0x35c <__vector_5+0x4e>
	{
		if (state < 2)
     334:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     338:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     33c:	02 97       	sbiw	r24, 0x02	; 2
     33e:	54 f4       	brge	.+20     	; 0x354 <__vector_5+0x46>
		{
			state++;
     340:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <state>
     344:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <state+0x1>
     348:	01 96       	adiw	r24, 0x01	; 1
     34a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <state+0x1>
     34e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <state>
     352:	04 c0       	rjmp	.+8      	; 0x35c <__vector_5+0x4e>
			} else {
			state = 0;
     354:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <state+0x1>
     358:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <state>
		}
	}
	
	// Interrupciones para los botones PD3, PD2 - Botones para guardar posiciones
	if (!(PIND & (1<<PIND3)))
     35c:	4b 99       	sbic	0x09, 3	; 9
     35e:	14 c0       	rjmp	.+40     	; 0x388 <__vector_5+0x7a>
	{
		if (buttonStateD3 < 3)
     360:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <buttonStateD3>
     364:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <buttonStateD3+0x1>
     368:	03 97       	sbiw	r24, 0x03	; 3
     36a:	54 f4       	brge	.+20     	; 0x380 <__vector_5+0x72>
		{
			buttonStateD3++;
     36c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <buttonStateD3>
     370:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <buttonStateD3+0x1>
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <buttonStateD3+0x1>
     37a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <buttonStateD3>
     37e:	04 c0       	rjmp	.+8      	; 0x388 <__vector_5+0x7a>
		}
		else
		{
			buttonStateD3 = 0;
     380:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <buttonStateD3+0x1>
     384:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <buttonStateD3>
		}
	}
	if (!(PIND & (1<<PIND2)))
     388:	4a 99       	sbic	0x09, 2	; 9
     38a:	14 c0       	rjmp	.+40     	; 0x3b4 <__vector_5+0xa6>
	{
		if (buttonStateD2 < 3)
     38c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <buttonStateD2>
     390:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <buttonStateD2+0x1>
     394:	03 97       	sbiw	r24, 0x03	; 3
     396:	54 f4       	brge	.+20     	; 0x3ac <__vector_5+0x9e>
		{
			buttonStateD2++;
     398:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <buttonStateD2>
     39c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <buttonStateD2+0x1>
     3a0:	01 96       	adiw	r24, 0x01	; 1
     3a2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <buttonStateD2+0x1>
     3a6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <buttonStateD2>
     3aa:	04 c0       	rjmp	.+8      	; 0x3b4 <__vector_5+0xa6>
		}
		else
		{
			buttonStateD2 = 0;
     3ac:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <buttonStateD2+0x1>
     3b0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <buttonStateD2>
		}
	}
	
	if (buttonStateD3 == 1){		/*Guarda la primera posicion*/
     3b4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <buttonStateD3>
     3b8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <buttonStateD3+0x1>
     3bc:	01 97       	sbiw	r24, 0x01	; 1
     3be:	59 f5       	brne	.+86     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
		EEPROM_write(0, adcvalue1);
     3c0:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <adcvalue1>
     3c4:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <adcvalue1+0x1>
     3c8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <adcvalue1+0x2>
     3cc:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <adcvalue1+0x3>
     3d0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(1, adcvalue2);
     3dc:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <adcvalue2>
     3e0:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <adcvalue2+0x1>
     3e4:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <adcvalue2+0x2>
     3e8:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <adcvalue2+0x3>
     3ec:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(2, adcvalue3);
     3f8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <adcvalue3>
     3fc:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <adcvalue3+0x1>
     400:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <adcvalue3+0x2>
     404:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <adcvalue3+0x3>
     408:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     40c:	82 e0       	ldi	r24, 0x02	; 2
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
     414:	ba c0       	rjmp	.+372    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
		} else if (buttonStateD2 == 1){	/*Guarda la segunda posicion*/
     416:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <buttonStateD2>
     41a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <buttonStateD2+0x1>
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	59 f5       	brne	.+86     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
		EEPROM_write(3, adcvalue2);
     422:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <adcvalue2>
     426:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <adcvalue2+0x1>
     42a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <adcvalue2+0x2>
     42e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <adcvalue2+0x3>
     432:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     436:	83 e0       	ldi	r24, 0x03	; 3
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(4, adcvalue3);
     43e:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <adcvalue3>
     442:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <adcvalue3+0x1>
     446:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <adcvalue3+0x2>
     44a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <adcvalue3+0x3>
     44e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     452:	84 e0       	ldi	r24, 0x04	; 4
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(5, adcvalue4);
     45a:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <adcvalue4>
     45e:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <adcvalue4+0x1>
     462:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adcvalue4+0x2>
     466:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adcvalue4+0x3>
     46a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     46e:	85 e0       	ldi	r24, 0x05	; 5
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
     476:	89 c0       	rjmp	.+274    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
		} else if (buttonStateD3 == 2){
     478:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <buttonStateD3>
     47c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <buttonStateD3+0x1>
     480:	02 97       	sbiw	r24, 0x02	; 2
     482:	e9 f5       	brne	.+122    	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
		adcvalue1 = EEPROM_read(0);
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     48c:	bc 01       	movw	r22, r24
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     496:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <adcvalue1>
     49a:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <adcvalue1+0x1>
     49e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <adcvalue1+0x2>
     4a2:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <adcvalue1+0x3>
		writecanalA(adcvalue1);
     4a6:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <writecanalA>
		adcvalue2 = EEPROM_read(1);
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     4b2:	bc 01       	movw	r22, r24
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     4bc:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <adcvalue2>
     4c0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <adcvalue2+0x1>
     4c4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <adcvalue2+0x2>
     4c8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <adcvalue2+0x3>
		writecanalB(adcvalue2);
     4cc:	0e 94 13 05 	call	0xa26	; 0xa26 <writecanalB>
		adcvalue3 = EEPROM_read(2);
     4d0:	82 e0       	ldi	r24, 0x02	; 2
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     4d8:	bc 01       	movw	r22, r24
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     4e2:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <adcvalue3>
     4e6:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <adcvalue3+0x1>
     4ea:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcvalue3+0x2>
     4ee:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcvalue3+0x3>
		updateDutyCA2(adcvalue3);
     4f2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     4f6:	86 2f       	mov	r24, r22
     4f8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <updateDutyCA2>
     4fc:	46 c0       	rjmp	.+140    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
		} else if (buttonStateD2 == 2){
     4fe:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <buttonStateD2>
     502:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <buttonStateD2+0x1>
     506:	02 97       	sbiw	r24, 0x02	; 2
     508:	09 f0       	breq	.+2      	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
     50a:	3f c0       	rjmp	.+126    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
		adcvalue2 = EEPROM_read(3);
     50c:	83 e0       	ldi	r24, 0x03	; 3
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     514:	bc 01       	movw	r22, r24
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     51e:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <adcvalue2>
     522:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <adcvalue2+0x1>
     526:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <adcvalue2+0x2>
     52a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <adcvalue2+0x3>
		writecanalB(adcvalue2);
     52e:	0e 94 13 05 	call	0xa26	; 0xa26 <writecanalB>
		adcvalue3 =  EEPROM_read(4);
     532:	84 e0       	ldi	r24, 0x04	; 4
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     53a:	bc 01       	movw	r22, r24
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     544:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <adcvalue3>
     548:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <adcvalue3+0x1>
     54c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcvalue3+0x2>
     550:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcvalue3+0x3>
		updateDutyCA2(adcvalue3);
     554:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     558:	86 2f       	mov	r24, r22
     55a:	0e 94 c6 05 	call	0xb8c	; 0xb8c <updateDutyCA2>
		adcvalue4 = EEPROM_read(5);
     55e:	85 e0       	ldi	r24, 0x05	; 5
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     566:	bc 01       	movw	r22, r24
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     570:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <adcvalue4>
     574:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <adcvalue4+0x1>
     578:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <adcvalue4+0x2>
     57c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <adcvalue4+0x3>
		updateDutyCA(adcvalue4);
     580:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     584:	86 2f       	mov	r24, r22
     586:	0e 94 4b 04 	call	0x896	; 0x896 <updateDutyCA>
	}
}
     58a:	ff 91       	pop	r31
     58c:	ef 91       	pop	r30
     58e:	bf 91       	pop	r27
     590:	af 91       	pop	r26
     592:	9f 91       	pop	r25
     594:	8f 91       	pop	r24
     596:	7f 91       	pop	r23
     598:	6f 91       	pop	r22
     59a:	5f 91       	pop	r21
     59c:	4f 91       	pop	r20
     59e:	3f 91       	pop	r19
     5a0:	2f 91       	pop	r18
     5a2:	0f 90       	pop	r0
     5a4:	0f be       	out	0x3f, r0	; 63
     5a6:	0f 90       	pop	r0
     5a8:	1f 90       	pop	r1
     5aa:	18 95       	reti

000005ac <__vector_4>:

ISR(PCINT1_vect){
     5ac:	1f 92       	push	r1
     5ae:	0f 92       	push	r0
     5b0:	0f b6       	in	r0, 0x3f	; 63
     5b2:	0f 92       	push	r0
     5b4:	11 24       	eor	r1, r1
     5b6:	2f 93       	push	r18
     5b8:	3f 93       	push	r19
     5ba:	4f 93       	push	r20
     5bc:	5f 93       	push	r21
     5be:	6f 93       	push	r22
     5c0:	7f 93       	push	r23
     5c2:	8f 93       	push	r24
     5c4:	9f 93       	push	r25
     5c6:	af 93       	push	r26
     5c8:	bf 93       	push	r27
     5ca:	ef 93       	push	r30
     5cc:	ff 93       	push	r31
	// Interrupciones para los botones A4(PC4) , A5(PC5)
	if (!(PINC & (1<<PINC4)))
     5ce:	34 99       	sbic	0x06, 4	; 6
     5d0:	14 c0       	rjmp	.+40     	; 0x5fa <__vector_4+0x4e>
	{
		if (buttonStateA4 < 3)
     5d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <buttonStateA4>
     5d6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <buttonStateA4+0x1>
     5da:	03 97       	sbiw	r24, 0x03	; 3
     5dc:	54 f4       	brge	.+20     	; 0x5f2 <__vector_4+0x46>
		{
			buttonStateA4++;
     5de:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <buttonStateA4>
     5e2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <buttonStateA4+0x1>
     5e6:	01 96       	adiw	r24, 0x01	; 1
     5e8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <buttonStateA4+0x1>
     5ec:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <buttonStateA4>
     5f0:	04 c0       	rjmp	.+8      	; 0x5fa <__vector_4+0x4e>
		}
		else
		{
			buttonStateA4 = 0;
     5f2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <buttonStateA4+0x1>
     5f6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <buttonStateA4>
		}
	}
	if (!(PINC & (1<<PINC5)))
     5fa:	35 99       	sbic	0x06, 5	; 6
     5fc:	14 c0       	rjmp	.+40     	; 0x626 <__vector_4+0x7a>
	{
		if (buttonStateA5 < 3)
     5fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     602:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     606:	03 97       	sbiw	r24, 0x03	; 3
     608:	54 f4       	brge	.+20     	; 0x61e <__vector_4+0x72>
		{
			buttonStateA5++;
     60a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     60e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     612:	01 96       	adiw	r24, 0x01	; 1
     614:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     618:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     61c:	04 c0       	rjmp	.+8      	; 0x626 <__vector_4+0x7a>
		}
		else
		{
			buttonStateA5 = 0;
     61e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     622:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
	}
	
	if (buttonStateA4 == 1){	//Guarda la tercera posicion
     626:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <buttonStateA4>
     62a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <buttonStateA4+0x1>
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	59 f5       	brne	.+86     	; 0x688 <__vector_4+0xdc>
		EEPROM_write(6, adcvalue3);
     632:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <adcvalue3>
     636:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <adcvalue3+0x1>
     63a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <adcvalue3+0x2>
     63e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <adcvalue3+0x3>
     642:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     646:	86 e0       	ldi	r24, 0x06	; 6
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(7, adcvalue4);
     64e:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <adcvalue4>
     652:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <adcvalue4+0x1>
     656:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adcvalue4+0x2>
     65a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adcvalue4+0x3>
     65e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     662:	87 e0       	ldi	r24, 0x07	; 7
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(8, adcvalue1);
     66a:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <adcvalue1>
     66e:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <adcvalue1+0x1>
     672:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <adcvalue1+0x2>
     676:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <adcvalue1+0x3>
     67a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     67e:	88 e0       	ldi	r24, 0x08	; 8
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
     686:	dc c0       	rjmp	.+440    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
		} else if (buttonStateA5 == 1){	//Guarda la cuarta posicion
     688:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     68c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     690:	01 97       	sbiw	r24, 0x01	; 1
     692:	c9 f5       	brne	.+114    	; 0x706 <__vector_4+0x15a>
		EEPROM_write(9, adcvalue1);
     694:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <adcvalue1>
     698:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <adcvalue1+0x1>
     69c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <adcvalue1+0x2>
     6a0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <adcvalue1+0x3>
     6a4:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     6a8:	89 e0       	ldi	r24, 0x09	; 9
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(10, adcvalue2);
     6b0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <adcvalue2>
     6b4:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <adcvalue2+0x1>
     6b8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <adcvalue2+0x2>
     6bc:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <adcvalue2+0x3>
     6c0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     6c4:	8a e0       	ldi	r24, 0x0A	; 10
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(11, adcvalue3);
     6cc:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <adcvalue3>
     6d0:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <adcvalue3+0x1>
     6d4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <adcvalue3+0x2>
     6d8:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <adcvalue3+0x3>
     6dc:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     6e0:	8b e0       	ldi	r24, 0x0B	; 11
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
		EEPROM_write(12, adcvalue4);
     6e8:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <adcvalue4>
     6ec:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <adcvalue4+0x1>
     6f0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adcvalue4+0x2>
     6f4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adcvalue4+0x3>
     6f8:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     6fc:	8c e0       	ldi	r24, 0x0C	; 12
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 75 00 	call	0xea	; 0xea <EEPROM_write>
     704:	9d c0       	rjmp	.+314    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
		} else if (buttonStateA4 == 2){
     706:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <buttonStateA4>
     70a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <buttonStateA4+0x1>
     70e:	02 97       	sbiw	r24, 0x02	; 2
     710:	f1 f5       	brne	.+124    	; 0x78e <__vector_4+0x1e2>
		adcvalue3 = EEPROM_read(6);
     712:	86 e0       	ldi	r24, 0x06	; 6
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     71a:	bc 01       	movw	r22, r24
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     724:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <adcvalue3>
     728:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <adcvalue3+0x1>
     72c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcvalue3+0x2>
     730:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcvalue3+0x3>
		updateDutyCA2(adcvalue3);
     734:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     738:	86 2f       	mov	r24, r22
     73a:	0e 94 c6 05 	call	0xb8c	; 0xb8c <updateDutyCA2>
		adcvalue4 = EEPROM_read(7);
     73e:	87 e0       	ldi	r24, 0x07	; 7
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     746:	bc 01       	movw	r22, r24
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     750:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <adcvalue4>
     754:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <adcvalue4+0x1>
     758:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <adcvalue4+0x2>
     75c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <adcvalue4+0x3>
		updateDutyCA(adcvalue4);
     760:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     764:	86 2f       	mov	r24, r22
     766:	0e 94 4b 04 	call	0x896	; 0x896 <updateDutyCA>
		adcvalue1 = EEPROM_read(8);
     76a:	88 e0       	ldi	r24, 0x08	; 8
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     772:	bc 01       	movw	r22, r24
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     77c:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <adcvalue1>
     780:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <adcvalue1+0x1>
     784:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <adcvalue1+0x2>
     788:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <adcvalue1+0x3>
     78c:	59 c0       	rjmp	.+178    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
		} else if (buttonStateA5 == 2){
     78e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     792:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     796:	02 97       	sbiw	r24, 0x02	; 2
     798:	09 f0       	breq	.+2      	; 0x79c <__vector_4+0x1f0>
     79a:	52 c0       	rjmp	.+164    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
		adcvalue1 = EEPROM_read(9);
     79c:	89 e0       	ldi	r24, 0x09	; 9
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     7a4:	bc 01       	movw	r22, r24
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     7ae:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <adcvalue1>
     7b2:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <adcvalue1+0x1>
     7b6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <adcvalue1+0x2>
     7ba:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <adcvalue1+0x3>
		writecanalA(adcvalue1);
     7be:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <writecanalA>
		adcvalue2 = EEPROM_read(10);
     7c2:	8a e0       	ldi	r24, 0x0A	; 10
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     7ca:	bc 01       	movw	r22, r24
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     7d4:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <adcvalue2>
     7d8:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <adcvalue2+0x1>
     7dc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <adcvalue2+0x2>
     7e0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <adcvalue2+0x3>
		writecanalB(adcvalue2);
     7e4:	0e 94 13 05 	call	0xa26	; 0xa26 <writecanalB>
		adcvalue3 = EEPROM_read(11);
     7e8:	8b e0       	ldi	r24, 0x0B	; 11
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     7f0:	bc 01       	movw	r22, r24
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     7fa:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <adcvalue3>
     7fe:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <adcvalue3+0x1>
     802:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <adcvalue3+0x2>
     806:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <adcvalue3+0x3>
		updateDutyCA2(adcvalue3);
     80a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     80e:	86 2f       	mov	r24, r22
     810:	0e 94 c6 05 	call	0xb8c	; 0xb8c <updateDutyCA2>
		adcvalue4 = EEPROM_read(12);
     814:	8c e0       	ldi	r24, 0x0C	; 12
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 81 00 	call	0x102	; 0x102 <EEPROM_read>
     81c:	bc 01       	movw	r22, r24
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     826:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <adcvalue4>
     82a:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <adcvalue4+0x1>
     82e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <adcvalue4+0x2>
     832:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <adcvalue4+0x3>
		updateDutyCA(adcvalue4);
     836:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     83a:	86 2f       	mov	r24, r22
     83c:	0e 94 4b 04 	call	0x896	; 0x896 <updateDutyCA>
	}
     840:	ff 91       	pop	r31
     842:	ef 91       	pop	r30
     844:	bf 91       	pop	r27
     846:	af 91       	pop	r26
     848:	9f 91       	pop	r25
     84a:	8f 91       	pop	r24
     84c:	7f 91       	pop	r23
     84e:	6f 91       	pop	r22
     850:	5f 91       	pop	r21
     852:	4f 91       	pop	r20
     854:	3f 91       	pop	r19
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	0f be       	out	0x3f, r0	; 63
     85c:	0f 90       	pop	r0
     85e:	1f 90       	pop	r1
     860:	18 95       	reti

00000862 <initPWM0A>:
	}
	
	if (prescaler == 1024) {
		TCCR0B |= (1 << CS02)|(1 << CS00);
		} else {
		TCCR0B |= (1 << CS00);
     862:	9a b1       	in	r25, 0x0a	; 10
     864:	90 64       	ori	r25, 0x40	; 64
     866:	9a b9       	out	0x0a, r25	; 10
     868:	94 b5       	in	r25, 0x24	; 36
     86a:	93 60       	ori	r25, 0x03	; 3
     86c:	94 bd       	out	0x24, r25	; 36
     86e:	88 23       	and	r24, r24
     870:	21 f0       	breq	.+8      	; 0x87a <initPWM0A+0x18>
     872:	84 b5       	in	r24, 0x24	; 36
     874:	80 6c       	ori	r24, 0xC0	; 192
     876:	84 bd       	out	0x24, r24	; 36
     878:	03 c0       	rjmp	.+6      	; 0x880 <initPWM0A+0x1e>
     87a:	84 b5       	in	r24, 0x24	; 36
     87c:	80 68       	ori	r24, 0x80	; 128
     87e:	84 bd       	out	0x24, r24	; 36
     880:	61 15       	cp	r22, r1
     882:	74 40       	sbci	r23, 0x04	; 4
     884:	21 f4       	brne	.+8      	; 0x88e <initPWM0A+0x2c>
     886:	85 b5       	in	r24, 0x25	; 37
     888:	85 60       	ori	r24, 0x05	; 5
     88a:	85 bd       	out	0x25, r24	; 37
     88c:	08 95       	ret
     88e:	85 b5       	in	r24, 0x25	; 37
     890:	81 60       	ori	r24, 0x01	; 1
     892:	85 bd       	out	0x25, r24	; 37
     894:	08 95       	ret

00000896 <updateDutyCA>:
	}
}

void updateDutyCA(uint8_t duty){
	OCR0A = ((duty/255.0)*30)+6;
     896:	68 2f       	mov	r22, r24
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 0c 07 	call	0xe18	; 0xe18 <__floatsisf>
     8a2:	20 e0       	ldi	r18, 0x00	; 0
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	4f e7       	ldi	r20, 0x7F	; 127
     8a8:	53 e4       	ldi	r21, 0x43	; 67
     8aa:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__divsf3>
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	40 ef       	ldi	r20, 0xF0	; 240
     8b4:	51 e4       	ldi	r21, 0x41	; 65
     8b6:	0e 94 98 07 	call	0xf30	; 0xf30 <__mulsf3>
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	40 ec       	ldi	r20, 0xC0	; 192
     8c0:	50 e4       	ldi	r21, 0x40	; 64
     8c2:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__addsf3>
     8c6:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     8ca:	67 bd       	out	0x27, r22	; 39
     8cc:	08 95       	ret

000008ce <initPWM1>:
 */ 

#include "PWM1.h"

void initPWM1(void){
	DDRB |= (1<<DDB1);
     8ce:	84 b1       	in	r24, 0x04	; 4
     8d0:	82 60       	ori	r24, 0x02	; 2
     8d2:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<DDB2);	//CONFIGURATION OUTPUT PB1 AND PB2
     8d4:	84 b1       	in	r24, 0x04	; 4
     8d6:	84 60       	ori	r24, 0x04	; 4
     8d8:	84 b9       	out	0x04, r24	; 4
	TCCR1A = (1<<COM1A1)|(1<<COM1B1)|(0<<COM1A0);
     8da:	e0 e8       	ldi	r30, 0x80	; 128
     8dc:	f0 e0       	ldi	r31, 0x00	; 0
     8de:	80 ea       	ldi	r24, 0xA0	; 160
     8e0:	80 83       	st	Z, r24
	TCCR1A |= (1<<WGM11)|(0<<WGM10);
     8e2:	80 81       	ld	r24, Z
     8e4:	82 60       	ori	r24, 0x02	; 2
     8e6:	80 83       	st	Z, r24
	TCCR1B = (1<<WGM13)|(1<<WGM12);
     8e8:	e1 e8       	ldi	r30, 0x81	; 129
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	88 e1       	ldi	r24, 0x18	; 24
     8ee:	80 83       	st	Z, r24
	TCCR1B |= (0<<CS12)|(1<<CS11)|(0<<CS10);	// Prescaler de 8
     8f0:	80 81       	ld	r24, Z
     8f2:	82 60       	ori	r24, 0x02	; 2
     8f4:	80 83       	st	Z, r24
	ICR1 = 39999;	// VALOR TOP DE ICR1
     8f6:	8f e3       	ldi	r24, 0x3F	; 63
     8f8:	9c e9       	ldi	r25, 0x9C	; 156
     8fa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     8fe:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     902:	08 95       	ret

00000904 <map1>:

void writecanalB(float adcV){
	OCR1B = map1(adcV, 0, 1024, 1000, 4800);
}

float map1(float x, float in_min, float in_max, float out_min, float out_max){
     904:	4f 92       	push	r4
     906:	5f 92       	push	r5
     908:	6f 92       	push	r6
     90a:	7f 92       	push	r7
     90c:	af 92       	push	r10
     90e:	bf 92       	push	r11
     910:	cf 92       	push	r12
     912:	df 92       	push	r13
     914:	ef 92       	push	r14
     916:	ff 92       	push	r15
     918:	0f 93       	push	r16
     91a:	1f 93       	push	r17
     91c:	cf 93       	push	r28
     91e:	df 93       	push	r29
     920:	cd b7       	in	r28, 0x3d	; 61
     922:	de b7       	in	r29, 0x3e	; 62
     924:	28 97       	sbiw	r28, 0x08	; 8
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	f8 94       	cli
     92a:	de bf       	out	0x3e, r29	; 62
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	cd bf       	out	0x3d, r28	; 61
     930:	29 01       	movw	r4, r18
     932:	3a 01       	movw	r6, r20
     934:	ed 82       	std	Y+5, r14	; 0x05
     936:	fe 82       	std	Y+6, r15	; 0x06
     938:	0f 83       	std	Y+7, r16	; 0x07
     93a:	18 87       	std	Y+8, r17	; 0x08
	return((x - in_min)*(out_max - out_min)/(in_max - in_min)) + out_min;
     93c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     940:	69 83       	std	Y+1, r22	; 0x01
     942:	7a 83       	std	Y+2, r23	; 0x02
     944:	8b 83       	std	Y+3, r24	; 0x03
     946:	9c 83       	std	Y+4, r25	; 0x04
     948:	a6 01       	movw	r20, r12
     94a:	95 01       	movw	r18, r10
     94c:	69 8d       	ldd	r22, Y+25	; 0x19
     94e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     950:	8b 8d       	ldd	r24, Y+27	; 0x1b
     952:	9c 8d       	ldd	r25, Y+28	; 0x1c
     954:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     958:	9b 01       	movw	r18, r22
     95a:	ac 01       	movw	r20, r24
     95c:	69 81       	ldd	r22, Y+1	; 0x01
     95e:	7a 81       	ldd	r23, Y+2	; 0x02
     960:	8b 81       	ldd	r24, Y+3	; 0x03
     962:	9c 81       	ldd	r25, Y+4	; 0x04
     964:	0e 94 98 07 	call	0xf30	; 0xf30 <__mulsf3>
     968:	69 83       	std	Y+1, r22	; 0x01
     96a:	7a 83       	std	Y+2, r23	; 0x02
     96c:	8b 83       	std	Y+3, r24	; 0x03
     96e:	9c 83       	std	Y+4, r25	; 0x04
     970:	a3 01       	movw	r20, r6
     972:	92 01       	movw	r18, r4
     974:	c8 01       	movw	r24, r16
     976:	b7 01       	movw	r22, r14
     978:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     97c:	9b 01       	movw	r18, r22
     97e:	ac 01       	movw	r20, r24
     980:	69 81       	ldd	r22, Y+1	; 0x01
     982:	7a 81       	ldd	r23, Y+2	; 0x02
     984:	8b 81       	ldd	r24, Y+3	; 0x03
     986:	9c 81       	ldd	r25, Y+4	; 0x04
     988:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__divsf3>
     98c:	9b 01       	movw	r18, r22
     98e:	ac 01       	movw	r20, r24
     990:	c6 01       	movw	r24, r12
     992:	b5 01       	movw	r22, r10
     994:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__addsf3>
}
     998:	28 96       	adiw	r28, 0x08	; 8
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	ff 90       	pop	r15
     9ae:	ef 90       	pop	r14
     9b0:	df 90       	pop	r13
     9b2:	cf 90       	pop	r12
     9b4:	bf 90       	pop	r11
     9b6:	af 90       	pop	r10
     9b8:	7f 90       	pop	r7
     9ba:	6f 90       	pop	r6
     9bc:	5f 90       	pop	r5
     9be:	4f 90       	pop	r4
     9c0:	08 95       	ret

000009c2 <writecanalA>:
	TCCR1B = (1<<WGM13)|(1<<WGM12);
	TCCR1B |= (0<<CS12)|(1<<CS11)|(0<<CS10);	// Prescaler de 8
	ICR1 = 39999;	// VALOR TOP DE ICR1
}

void writecanalA(float adcV){
     9c2:	af 92       	push	r10
     9c4:	bf 92       	push	r11
     9c6:	cf 92       	push	r12
     9c8:	df 92       	push	r13
     9ca:	ef 92       	push	r14
     9cc:	ff 92       	push	r15
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
	OCR1A = map1(adcV, 0, 1024, 1000, 4800);
     9d2:	25 e4       	ldi	r18, 0x45	; 69
     9d4:	2f 93       	push	r18
     9d6:	26 e9       	ldi	r18, 0x96	; 150
     9d8:	2f 93       	push	r18
     9da:	1f 92       	push	r1
     9dc:	1f 92       	push	r1
     9de:	0f 2e       	mov	r0, r31
     9e0:	a1 2c       	mov	r10, r1
     9e2:	b1 2c       	mov	r11, r1
     9e4:	fa e7       	ldi	r31, 0x7A	; 122
     9e6:	cf 2e       	mov	r12, r31
     9e8:	f4 e4       	ldi	r31, 0x44	; 68
     9ea:	df 2e       	mov	r13, r31
     9ec:	f0 2d       	mov	r31, r0
     9ee:	e1 2c       	mov	r14, r1
     9f0:	f1 2c       	mov	r15, r1
     9f2:	00 e8       	ldi	r16, 0x80	; 128
     9f4:	14 e4       	ldi	r17, 0x44	; 68
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	a9 01       	movw	r20, r18
     9fc:	0e 94 82 04 	call	0x904	; 0x904 <map1>
     a00:	0f 90       	pop	r0
     a02:	0f 90       	pop	r0
     a04:	0f 90       	pop	r0
     a06:	0f 90       	pop	r0
     a08:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     a0c:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     a10:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
}
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	ff 90       	pop	r15
     a1a:	ef 90       	pop	r14
     a1c:	df 90       	pop	r13
     a1e:	cf 90       	pop	r12
     a20:	bf 90       	pop	r11
     a22:	af 90       	pop	r10
     a24:	08 95       	ret

00000a26 <writecanalB>:

void writecanalB(float adcV){
     a26:	af 92       	push	r10
     a28:	bf 92       	push	r11
     a2a:	cf 92       	push	r12
     a2c:	df 92       	push	r13
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	0f 93       	push	r16
     a34:	1f 93       	push	r17
	OCR1B = map1(adcV, 0, 1024, 1000, 4800);
     a36:	25 e4       	ldi	r18, 0x45	; 69
     a38:	2f 93       	push	r18
     a3a:	26 e9       	ldi	r18, 0x96	; 150
     a3c:	2f 93       	push	r18
     a3e:	1f 92       	push	r1
     a40:	1f 92       	push	r1
     a42:	0f 2e       	mov	r0, r31
     a44:	a1 2c       	mov	r10, r1
     a46:	b1 2c       	mov	r11, r1
     a48:	fa e7       	ldi	r31, 0x7A	; 122
     a4a:	cf 2e       	mov	r12, r31
     a4c:	f4 e4       	ldi	r31, 0x44	; 68
     a4e:	df 2e       	mov	r13, r31
     a50:	f0 2d       	mov	r31, r0
     a52:	e1 2c       	mov	r14, r1
     a54:	f1 2c       	mov	r15, r1
     a56:	00 e8       	ldi	r16, 0x80	; 128
     a58:	14 e4       	ldi	r17, 0x44	; 68
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	a9 01       	movw	r20, r18
     a60:	0e 94 82 04 	call	0x904	; 0x904 <map1>
     a64:	0f 90       	pop	r0
     a66:	0f 90       	pop	r0
     a68:	0f 90       	pop	r0
     a6a:	0f 90       	pop	r0
     a6c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     a70:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     a74:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
}
     a78:	1f 91       	pop	r17
     a7a:	0f 91       	pop	r16
     a7c:	ff 90       	pop	r15
     a7e:	ef 90       	pop	r14
     a80:	df 90       	pop	r13
     a82:	cf 90       	pop	r12
     a84:	bf 90       	pop	r11
     a86:	af 90       	pop	r10
     a88:	08 95       	ret

00000a8a <initPWM2A>:
 */ 

#include "PWM2.h"

void initPWM2A(uint8_t inverted, uint16_t prescaler){
	DDRB |= (1 << DDB3); //PD6 COMO SALIDA
     a8a:	94 b1       	in	r25, 0x04	; 4
     a8c:	98 60       	ori	r25, 0x08	; 8
     a8e:	94 b9       	out	0x04, r25	; 4
	TCCR2A |= (1 << WGM21)|(1 << WGM20); //PWM MODO FAST
     a90:	e0 eb       	ldi	r30, 0xB0	; 176
     a92:	f0 e0       	ldi	r31, 0x00	; 0
     a94:	90 81       	ld	r25, Z
     a96:	93 60       	ori	r25, 0x03	; 3
     a98:	90 83       	st	Z, r25
	
	if (inverted) {
     a9a:	88 23       	and	r24, r24
     a9c:	21 f0       	breq	.+8      	; 0xaa6 <initPWM2A+0x1c>
		TCCR2A |= (1 << COM2A1)|(1 << COM2A0);//PWM INVERTIDO
     a9e:	80 81       	ld	r24, Z
     aa0:	80 6c       	ori	r24, 0xC0	; 192
     aa2:	80 83       	st	Z, r24
     aa4:	05 c0       	rjmp	.+10     	; 0xab0 <initPWM2A+0x26>
		} else	 {
		TCCR2A |= (1 << COM2A1);//PWM NO INVERTIDO
     aa6:	e0 eb       	ldi	r30, 0xB0	; 176
     aa8:	f0 e0       	ldi	r31, 0x00	; 0
     aaa:	80 81       	ld	r24, Z
     aac:	80 68       	ori	r24, 0x80	; 128
     aae:	80 83       	st	Z, r24
	}

	if (prescaler == 1024) {
     ab0:	61 15       	cp	r22, r1
     ab2:	74 40       	sbci	r23, 0x04	; 4
     ab4:	31 f4       	brne	.+12     	; 0xac2 <initPWM2A+0x38>
		TCCR2B |= (1 << CS22)|(1 << CS21)|(1 << CS20);
     ab6:	e1 eb       	ldi	r30, 0xB1	; 177
     ab8:	f0 e0       	ldi	r31, 0x00	; 0
     aba:	80 81       	ld	r24, Z
     abc:	87 60       	ori	r24, 0x07	; 7
     abe:	80 83       	st	Z, r24
     ac0:	08 95       	ret
		} else {
		TCCR2B |= (1 << CS20);
     ac2:	e1 eb       	ldi	r30, 0xB1	; 177
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	80 81       	ld	r24, Z
     ac8:	81 60       	ori	r24, 0x01	; 1
     aca:	80 83       	st	Z, r24
     acc:	08 95       	ret

00000ace <map2>:

void updateDutyCA2(uint8_t duty){
	OCR2A = map2(duty,0,255,6,36);
}

float map2(float x, float in_min, float in_max, float out_min, float out_max){
     ace:	4f 92       	push	r4
     ad0:	5f 92       	push	r5
     ad2:	6f 92       	push	r6
     ad4:	7f 92       	push	r7
     ad6:	af 92       	push	r10
     ad8:	bf 92       	push	r11
     ada:	cf 92       	push	r12
     adc:	df 92       	push	r13
     ade:	ef 92       	push	r14
     ae0:	ff 92       	push	r15
     ae2:	0f 93       	push	r16
     ae4:	1f 93       	push	r17
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	cd b7       	in	r28, 0x3d	; 61
     aec:	de b7       	in	r29, 0x3e	; 62
     aee:	28 97       	sbiw	r28, 0x08	; 8
     af0:	0f b6       	in	r0, 0x3f	; 63
     af2:	f8 94       	cli
     af4:	de bf       	out	0x3e, r29	; 62
     af6:	0f be       	out	0x3f, r0	; 63
     af8:	cd bf       	out	0x3d, r28	; 61
     afa:	29 01       	movw	r4, r18
     afc:	3a 01       	movw	r6, r20
     afe:	ed 82       	std	Y+5, r14	; 0x05
     b00:	fe 82       	std	Y+6, r15	; 0x06
     b02:	0f 83       	std	Y+7, r16	; 0x07
     b04:	18 87       	std	Y+8, r17	; 0x08
	return ((x - in_min)*(out_max - out_min)/(in_max - in_min)) + out_min;
     b06:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     b0a:	69 83       	std	Y+1, r22	; 0x01
     b0c:	7a 83       	std	Y+2, r23	; 0x02
     b0e:	8b 83       	std	Y+3, r24	; 0x03
     b10:	9c 83       	std	Y+4, r25	; 0x04
     b12:	a6 01       	movw	r20, r12
     b14:	95 01       	movw	r18, r10
     b16:	69 8d       	ldd	r22, Y+25	; 0x19
     b18:	7a 8d       	ldd	r23, Y+26	; 0x1a
     b1a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b1c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b1e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	69 81       	ldd	r22, Y+1	; 0x01
     b28:	7a 81       	ldd	r23, Y+2	; 0x02
     b2a:	8b 81       	ldd	r24, Y+3	; 0x03
     b2c:	9c 81       	ldd	r25, Y+4	; 0x04
     b2e:	0e 94 98 07 	call	0xf30	; 0xf30 <__mulsf3>
     b32:	69 83       	std	Y+1, r22	; 0x01
     b34:	7a 83       	std	Y+2, r23	; 0x02
     b36:	8b 83       	std	Y+3, r24	; 0x03
     b38:	9c 83       	std	Y+4, r25	; 0x04
     b3a:	a3 01       	movw	r20, r6
     b3c:	92 01       	movw	r18, r4
     b3e:	c8 01       	movw	r24, r16
     b40:	b7 01       	movw	r22, r14
     b42:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__subsf3>
     b46:	9b 01       	movw	r18, r22
     b48:	ac 01       	movw	r20, r24
     b4a:	69 81       	ldd	r22, Y+1	; 0x01
     b4c:	7a 81       	ldd	r23, Y+2	; 0x02
     b4e:	8b 81       	ldd	r24, Y+3	; 0x03
     b50:	9c 81       	ldd	r25, Y+4	; 0x04
     b52:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__divsf3>
     b56:	9b 01       	movw	r18, r22
     b58:	ac 01       	movw	r20, r24
     b5a:	c6 01       	movw	r24, r12
     b5c:	b5 01       	movw	r22, r10
     b5e:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__addsf3>
     b62:	28 96       	adiw	r28, 0x08	; 8
     b64:	0f b6       	in	r0, 0x3f	; 63
     b66:	f8 94       	cli
     b68:	de bf       	out	0x3e, r29	; 62
     b6a:	0f be       	out	0x3f, r0	; 63
     b6c:	cd bf       	out	0x3d, r28	; 61
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	1f 91       	pop	r17
     b74:	0f 91       	pop	r16
     b76:	ff 90       	pop	r15
     b78:	ef 90       	pop	r14
     b7a:	df 90       	pop	r13
     b7c:	cf 90       	pop	r12
     b7e:	bf 90       	pop	r11
     b80:	af 90       	pop	r10
     b82:	7f 90       	pop	r7
     b84:	6f 90       	pop	r6
     b86:	5f 90       	pop	r5
     b88:	4f 90       	pop	r4
     b8a:	08 95       	ret

00000b8c <updateDutyCA2>:
		} else {
		TCCR2B |= (1 << CS20);
	}
}

void updateDutyCA2(uint8_t duty){
     b8c:	af 92       	push	r10
     b8e:	bf 92       	push	r11
     b90:	cf 92       	push	r12
     b92:	df 92       	push	r13
     b94:	ef 92       	push	r14
     b96:	ff 92       	push	r15
     b98:	0f 93       	push	r16
     b9a:	1f 93       	push	r17
	OCR2A = map2(duty,0,255,6,36);
     b9c:	68 2f       	mov	r22, r24
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	0e 94 0a 07 	call	0xe14	; 0xe14 <__floatunsisf>
     ba8:	22 e4       	ldi	r18, 0x42	; 66
     baa:	2f 93       	push	r18
     bac:	20 e1       	ldi	r18, 0x10	; 16
     bae:	2f 93       	push	r18
     bb0:	1f 92       	push	r1
     bb2:	1f 92       	push	r1
     bb4:	0f 2e       	mov	r0, r31
     bb6:	a1 2c       	mov	r10, r1
     bb8:	b1 2c       	mov	r11, r1
     bba:	f0 ec       	ldi	r31, 0xC0	; 192
     bbc:	cf 2e       	mov	r12, r31
     bbe:	f0 e4       	ldi	r31, 0x40	; 64
     bc0:	df 2e       	mov	r13, r31
     bc2:	f0 2d       	mov	r31, r0
     bc4:	e1 2c       	mov	r14, r1
     bc6:	f1 2c       	mov	r15, r1
     bc8:	0f e7       	ldi	r16, 0x7F	; 127
     bca:	13 e4       	ldi	r17, 0x43	; 67
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	a9 01       	movw	r20, r18
     bd2:	0e 94 67 05 	call	0xace	; 0xace <map2>
     bd6:	0f 90       	pop	r0
     bd8:	0f 90       	pop	r0
     bda:	0f 90       	pop	r0
     bdc:	0f 90       	pop	r0
     bde:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__fixunssfsi>
     be2:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
}
     be6:	1f 91       	pop	r17
     be8:	0f 91       	pop	r16
     bea:	ff 90       	pop	r15
     bec:	ef 90       	pop	r14
     bee:	df 90       	pop	r13
     bf0:	cf 90       	pop	r12
     bf2:	bf 90       	pop	r11
     bf4:	af 90       	pop	r10
     bf6:	08 95       	ret

00000bf8 <__subsf3>:
     bf8:	50 58       	subi	r21, 0x80	; 128

00000bfa <__addsf3>:
     bfa:	bb 27       	eor	r27, r27
     bfc:	aa 27       	eor	r26, r26
     bfe:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3x>
     c02:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__fp_round>
     c06:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_pscA>
     c0a:	38 f0       	brcs	.+14     	; 0xc1a <__addsf3+0x20>
     c0c:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_pscB>
     c10:	20 f0       	brcs	.+8      	; 0xc1a <__addsf3+0x20>
     c12:	39 f4       	brne	.+14     	; 0xc22 <__addsf3+0x28>
     c14:	9f 3f       	cpi	r25, 0xFF	; 255
     c16:	19 f4       	brne	.+6      	; 0xc1e <__addsf3+0x24>
     c18:	26 f4       	brtc	.+8      	; 0xc22 <__addsf3+0x28>
     c1a:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <__fp_nan>
     c1e:	0e f4       	brtc	.+2      	; 0xc22 <__addsf3+0x28>
     c20:	e0 95       	com	r30
     c22:	e7 fb       	bst	r30, 7
     c24:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_inf>

00000c28 <__addsf3x>:
     c28:	e9 2f       	mov	r30, r25
     c2a:	0e 94 6f 07 	call	0xede	; 0xede <__fp_split3>
     c2e:	58 f3       	brcs	.-42     	; 0xc06 <__addsf3+0xc>
     c30:	ba 17       	cp	r27, r26
     c32:	62 07       	cpc	r22, r18
     c34:	73 07       	cpc	r23, r19
     c36:	84 07       	cpc	r24, r20
     c38:	95 07       	cpc	r25, r21
     c3a:	20 f0       	brcs	.+8      	; 0xc44 <__addsf3x+0x1c>
     c3c:	79 f4       	brne	.+30     	; 0xc5c <__addsf3x+0x34>
     c3e:	a6 f5       	brtc	.+104    	; 0xca8 <__addsf3x+0x80>
     c40:	0c 94 91 07 	jmp	0xf22	; 0xf22 <__fp_zero>
     c44:	0e f4       	brtc	.+2      	; 0xc48 <__addsf3x+0x20>
     c46:	e0 95       	com	r30
     c48:	0b 2e       	mov	r0, r27
     c4a:	ba 2f       	mov	r27, r26
     c4c:	a0 2d       	mov	r26, r0
     c4e:	0b 01       	movw	r0, r22
     c50:	b9 01       	movw	r22, r18
     c52:	90 01       	movw	r18, r0
     c54:	0c 01       	movw	r0, r24
     c56:	ca 01       	movw	r24, r20
     c58:	a0 01       	movw	r20, r0
     c5a:	11 24       	eor	r1, r1
     c5c:	ff 27       	eor	r31, r31
     c5e:	59 1b       	sub	r21, r25
     c60:	99 f0       	breq	.+38     	; 0xc88 <__addsf3x+0x60>
     c62:	59 3f       	cpi	r21, 0xF9	; 249
     c64:	50 f4       	brcc	.+20     	; 0xc7a <__addsf3x+0x52>
     c66:	50 3e       	cpi	r21, 0xE0	; 224
     c68:	68 f1       	brcs	.+90     	; 0xcc4 <__addsf3x+0x9c>
     c6a:	1a 16       	cp	r1, r26
     c6c:	f0 40       	sbci	r31, 0x00	; 0
     c6e:	a2 2f       	mov	r26, r18
     c70:	23 2f       	mov	r18, r19
     c72:	34 2f       	mov	r19, r20
     c74:	44 27       	eor	r20, r20
     c76:	58 5f       	subi	r21, 0xF8	; 248
     c78:	f3 cf       	rjmp	.-26     	; 0xc60 <__addsf3x+0x38>
     c7a:	46 95       	lsr	r20
     c7c:	37 95       	ror	r19
     c7e:	27 95       	ror	r18
     c80:	a7 95       	ror	r26
     c82:	f0 40       	sbci	r31, 0x00	; 0
     c84:	53 95       	inc	r21
     c86:	c9 f7       	brne	.-14     	; 0xc7a <__addsf3x+0x52>
     c88:	7e f4       	brtc	.+30     	; 0xca8 <__addsf3x+0x80>
     c8a:	1f 16       	cp	r1, r31
     c8c:	ba 0b       	sbc	r27, r26
     c8e:	62 0b       	sbc	r22, r18
     c90:	73 0b       	sbc	r23, r19
     c92:	84 0b       	sbc	r24, r20
     c94:	ba f0       	brmi	.+46     	; 0xcc4 <__addsf3x+0x9c>
     c96:	91 50       	subi	r25, 0x01	; 1
     c98:	a1 f0       	breq	.+40     	; 0xcc2 <__addsf3x+0x9a>
     c9a:	ff 0f       	add	r31, r31
     c9c:	bb 1f       	adc	r27, r27
     c9e:	66 1f       	adc	r22, r22
     ca0:	77 1f       	adc	r23, r23
     ca2:	88 1f       	adc	r24, r24
     ca4:	c2 f7       	brpl	.-16     	; 0xc96 <__addsf3x+0x6e>
     ca6:	0e c0       	rjmp	.+28     	; 0xcc4 <__addsf3x+0x9c>
     ca8:	ba 0f       	add	r27, r26
     caa:	62 1f       	adc	r22, r18
     cac:	73 1f       	adc	r23, r19
     cae:	84 1f       	adc	r24, r20
     cb0:	48 f4       	brcc	.+18     	; 0xcc4 <__addsf3x+0x9c>
     cb2:	87 95       	ror	r24
     cb4:	77 95       	ror	r23
     cb6:	67 95       	ror	r22
     cb8:	b7 95       	ror	r27
     cba:	f7 95       	ror	r31
     cbc:	9e 3f       	cpi	r25, 0xFE	; 254
     cbe:	08 f0       	brcs	.+2      	; 0xcc2 <__addsf3x+0x9a>
     cc0:	b0 cf       	rjmp	.-160    	; 0xc22 <__addsf3+0x28>
     cc2:	93 95       	inc	r25
     cc4:	88 0f       	add	r24, r24
     cc6:	08 f0       	brcs	.+2      	; 0xcca <__addsf3x+0xa2>
     cc8:	99 27       	eor	r25, r25
     cca:	ee 0f       	add	r30, r30
     ccc:	97 95       	ror	r25
     cce:	87 95       	ror	r24
     cd0:	08 95       	ret

00000cd2 <__divsf3>:
     cd2:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__divsf3x>
     cd6:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__fp_round>
     cda:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_pscB>
     cde:	58 f0       	brcs	.+22     	; 0xcf6 <__divsf3+0x24>
     ce0:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_pscA>
     ce4:	40 f0       	brcs	.+16     	; 0xcf6 <__divsf3+0x24>
     ce6:	29 f4       	brne	.+10     	; 0xcf2 <__divsf3+0x20>
     ce8:	5f 3f       	cpi	r21, 0xFF	; 255
     cea:	29 f0       	breq	.+10     	; 0xcf6 <__divsf3+0x24>
     cec:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_inf>
     cf0:	51 11       	cpse	r21, r1
     cf2:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_szero>
     cf6:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <__fp_nan>

00000cfa <__divsf3x>:
     cfa:	0e 94 6f 07 	call	0xede	; 0xede <__fp_split3>
     cfe:	68 f3       	brcs	.-38     	; 0xcda <__divsf3+0x8>

00000d00 <__divsf3_pse>:
     d00:	99 23       	and	r25, r25
     d02:	b1 f3       	breq	.-20     	; 0xcf0 <__divsf3+0x1e>
     d04:	55 23       	and	r21, r21
     d06:	91 f3       	breq	.-28     	; 0xcec <__divsf3+0x1a>
     d08:	95 1b       	sub	r25, r21
     d0a:	55 0b       	sbc	r21, r21
     d0c:	bb 27       	eor	r27, r27
     d0e:	aa 27       	eor	r26, r26
     d10:	62 17       	cp	r22, r18
     d12:	73 07       	cpc	r23, r19
     d14:	84 07       	cpc	r24, r20
     d16:	38 f0       	brcs	.+14     	; 0xd26 <__divsf3_pse+0x26>
     d18:	9f 5f       	subi	r25, 0xFF	; 255
     d1a:	5f 4f       	sbci	r21, 0xFF	; 255
     d1c:	22 0f       	add	r18, r18
     d1e:	33 1f       	adc	r19, r19
     d20:	44 1f       	adc	r20, r20
     d22:	aa 1f       	adc	r26, r26
     d24:	a9 f3       	breq	.-22     	; 0xd10 <__divsf3_pse+0x10>
     d26:	35 d0       	rcall	.+106    	; 0xd92 <__divsf3_pse+0x92>
     d28:	0e 2e       	mov	r0, r30
     d2a:	3a f0       	brmi	.+14     	; 0xd3a <__divsf3_pse+0x3a>
     d2c:	e0 e8       	ldi	r30, 0x80	; 128
     d2e:	32 d0       	rcall	.+100    	; 0xd94 <__divsf3_pse+0x94>
     d30:	91 50       	subi	r25, 0x01	; 1
     d32:	50 40       	sbci	r21, 0x00	; 0
     d34:	e6 95       	lsr	r30
     d36:	00 1c       	adc	r0, r0
     d38:	ca f7       	brpl	.-14     	; 0xd2c <__divsf3_pse+0x2c>
     d3a:	2b d0       	rcall	.+86     	; 0xd92 <__divsf3_pse+0x92>
     d3c:	fe 2f       	mov	r31, r30
     d3e:	29 d0       	rcall	.+82     	; 0xd92 <__divsf3_pse+0x92>
     d40:	66 0f       	add	r22, r22
     d42:	77 1f       	adc	r23, r23
     d44:	88 1f       	adc	r24, r24
     d46:	bb 1f       	adc	r27, r27
     d48:	26 17       	cp	r18, r22
     d4a:	37 07       	cpc	r19, r23
     d4c:	48 07       	cpc	r20, r24
     d4e:	ab 07       	cpc	r26, r27
     d50:	b0 e8       	ldi	r27, 0x80	; 128
     d52:	09 f0       	breq	.+2      	; 0xd56 <__divsf3_pse+0x56>
     d54:	bb 0b       	sbc	r27, r27
     d56:	80 2d       	mov	r24, r0
     d58:	bf 01       	movw	r22, r30
     d5a:	ff 27       	eor	r31, r31
     d5c:	93 58       	subi	r25, 0x83	; 131
     d5e:	5f 4f       	sbci	r21, 0xFF	; 255
     d60:	3a f0       	brmi	.+14     	; 0xd70 <__divsf3_pse+0x70>
     d62:	9e 3f       	cpi	r25, 0xFE	; 254
     d64:	51 05       	cpc	r21, r1
     d66:	78 f0       	brcs	.+30     	; 0xd86 <__divsf3_pse+0x86>
     d68:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_inf>
     d6c:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_szero>
     d70:	5f 3f       	cpi	r21, 0xFF	; 255
     d72:	e4 f3       	brlt	.-8      	; 0xd6c <__divsf3_pse+0x6c>
     d74:	98 3e       	cpi	r25, 0xE8	; 232
     d76:	d4 f3       	brlt	.-12     	; 0xd6c <__divsf3_pse+0x6c>
     d78:	86 95       	lsr	r24
     d7a:	77 95       	ror	r23
     d7c:	67 95       	ror	r22
     d7e:	b7 95       	ror	r27
     d80:	f7 95       	ror	r31
     d82:	9f 5f       	subi	r25, 0xFF	; 255
     d84:	c9 f7       	brne	.-14     	; 0xd78 <__divsf3_pse+0x78>
     d86:	88 0f       	add	r24, r24
     d88:	91 1d       	adc	r25, r1
     d8a:	96 95       	lsr	r25
     d8c:	87 95       	ror	r24
     d8e:	97 f9       	bld	r25, 7
     d90:	08 95       	ret
     d92:	e1 e0       	ldi	r30, 0x01	; 1
     d94:	66 0f       	add	r22, r22
     d96:	77 1f       	adc	r23, r23
     d98:	88 1f       	adc	r24, r24
     d9a:	bb 1f       	adc	r27, r27
     d9c:	62 17       	cp	r22, r18
     d9e:	73 07       	cpc	r23, r19
     da0:	84 07       	cpc	r24, r20
     da2:	ba 07       	cpc	r27, r26
     da4:	20 f0       	brcs	.+8      	; 0xdae <__divsf3_pse+0xae>
     da6:	62 1b       	sub	r22, r18
     da8:	73 0b       	sbc	r23, r19
     daa:	84 0b       	sbc	r24, r20
     dac:	ba 0b       	sbc	r27, r26
     dae:	ee 1f       	adc	r30, r30
     db0:	88 f7       	brcc	.-30     	; 0xd94 <__divsf3_pse+0x94>
     db2:	e0 95       	com	r30
     db4:	08 95       	ret

00000db6 <__fixunssfsi>:
     db6:	0e 94 77 07 	call	0xeee	; 0xeee <__fp_splitA>
     dba:	88 f0       	brcs	.+34     	; 0xdde <__fixunssfsi+0x28>
     dbc:	9f 57       	subi	r25, 0x7F	; 127
     dbe:	98 f0       	brcs	.+38     	; 0xde6 <__fixunssfsi+0x30>
     dc0:	b9 2f       	mov	r27, r25
     dc2:	99 27       	eor	r25, r25
     dc4:	b7 51       	subi	r27, 0x17	; 23
     dc6:	b0 f0       	brcs	.+44     	; 0xdf4 <__fixunssfsi+0x3e>
     dc8:	e1 f0       	breq	.+56     	; 0xe02 <__fixunssfsi+0x4c>
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	99 1f       	adc	r25, r25
     dd2:	1a f0       	brmi	.+6      	; 0xdda <__fixunssfsi+0x24>
     dd4:	ba 95       	dec	r27
     dd6:	c9 f7       	brne	.-14     	; 0xdca <__fixunssfsi+0x14>
     dd8:	14 c0       	rjmp	.+40     	; 0xe02 <__fixunssfsi+0x4c>
     dda:	b1 30       	cpi	r27, 0x01	; 1
     ddc:	91 f0       	breq	.+36     	; 0xe02 <__fixunssfsi+0x4c>
     dde:	0e 94 91 07 	call	0xf22	; 0xf22 <__fp_zero>
     de2:	b1 e0       	ldi	r27, 0x01	; 1
     de4:	08 95       	ret
     de6:	0c 94 91 07 	jmp	0xf22	; 0xf22 <__fp_zero>
     dea:	67 2f       	mov	r22, r23
     dec:	78 2f       	mov	r23, r24
     dee:	88 27       	eor	r24, r24
     df0:	b8 5f       	subi	r27, 0xF8	; 248
     df2:	39 f0       	breq	.+14     	; 0xe02 <__fixunssfsi+0x4c>
     df4:	b9 3f       	cpi	r27, 0xF9	; 249
     df6:	cc f3       	brlt	.-14     	; 0xdea <__fixunssfsi+0x34>
     df8:	86 95       	lsr	r24
     dfa:	77 95       	ror	r23
     dfc:	67 95       	ror	r22
     dfe:	b3 95       	inc	r27
     e00:	d9 f7       	brne	.-10     	; 0xdf8 <__fixunssfsi+0x42>
     e02:	3e f4       	brtc	.+14     	; 0xe12 <__fixunssfsi+0x5c>
     e04:	90 95       	com	r25
     e06:	80 95       	com	r24
     e08:	70 95       	com	r23
     e0a:	61 95       	neg	r22
     e0c:	7f 4f       	sbci	r23, 0xFF	; 255
     e0e:	8f 4f       	sbci	r24, 0xFF	; 255
     e10:	9f 4f       	sbci	r25, 0xFF	; 255
     e12:	08 95       	ret

00000e14 <__floatunsisf>:
     e14:	e8 94       	clt
     e16:	09 c0       	rjmp	.+18     	; 0xe2a <__floatsisf+0x12>

00000e18 <__floatsisf>:
     e18:	97 fb       	bst	r25, 7
     e1a:	3e f4       	brtc	.+14     	; 0xe2a <__floatsisf+0x12>
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	61 95       	neg	r22
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	99 23       	and	r25, r25
     e2c:	a9 f0       	breq	.+42     	; 0xe58 <__floatsisf+0x40>
     e2e:	f9 2f       	mov	r31, r25
     e30:	96 e9       	ldi	r25, 0x96	; 150
     e32:	bb 27       	eor	r27, r27
     e34:	93 95       	inc	r25
     e36:	f6 95       	lsr	r31
     e38:	87 95       	ror	r24
     e3a:	77 95       	ror	r23
     e3c:	67 95       	ror	r22
     e3e:	b7 95       	ror	r27
     e40:	f1 11       	cpse	r31, r1
     e42:	f8 cf       	rjmp	.-16     	; 0xe34 <__floatsisf+0x1c>
     e44:	fa f4       	brpl	.+62     	; 0xe84 <__floatsisf+0x6c>
     e46:	bb 0f       	add	r27, r27
     e48:	11 f4       	brne	.+4      	; 0xe4e <__floatsisf+0x36>
     e4a:	60 ff       	sbrs	r22, 0
     e4c:	1b c0       	rjmp	.+54     	; 0xe84 <__floatsisf+0x6c>
     e4e:	6f 5f       	subi	r22, 0xFF	; 255
     e50:	7f 4f       	sbci	r23, 0xFF	; 255
     e52:	8f 4f       	sbci	r24, 0xFF	; 255
     e54:	9f 4f       	sbci	r25, 0xFF	; 255
     e56:	16 c0       	rjmp	.+44     	; 0xe84 <__floatsisf+0x6c>
     e58:	88 23       	and	r24, r24
     e5a:	11 f0       	breq	.+4      	; 0xe60 <__floatsisf+0x48>
     e5c:	96 e9       	ldi	r25, 0x96	; 150
     e5e:	11 c0       	rjmp	.+34     	; 0xe82 <__floatsisf+0x6a>
     e60:	77 23       	and	r23, r23
     e62:	21 f0       	breq	.+8      	; 0xe6c <__floatsisf+0x54>
     e64:	9e e8       	ldi	r25, 0x8E	; 142
     e66:	87 2f       	mov	r24, r23
     e68:	76 2f       	mov	r23, r22
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <__floatsisf+0x5e>
     e6c:	66 23       	and	r22, r22
     e6e:	71 f0       	breq	.+28     	; 0xe8c <__floatsisf+0x74>
     e70:	96 e8       	ldi	r25, 0x86	; 134
     e72:	86 2f       	mov	r24, r22
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	2a f0       	brmi	.+10     	; 0xe84 <__floatsisf+0x6c>
     e7a:	9a 95       	dec	r25
     e7c:	66 0f       	add	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	88 1f       	adc	r24, r24
     e82:	da f7       	brpl	.-10     	; 0xe7a <__floatsisf+0x62>
     e84:	88 0f       	add	r24, r24
     e86:	96 95       	lsr	r25
     e88:	87 95       	ror	r24
     e8a:	97 f9       	bld	r25, 7
     e8c:	08 95       	ret

00000e8e <__fp_inf>:
     e8e:	97 f9       	bld	r25, 7
     e90:	9f 67       	ori	r25, 0x7F	; 127
     e92:	80 e8       	ldi	r24, 0x80	; 128
     e94:	70 e0       	ldi	r23, 0x00	; 0
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	08 95       	ret

00000e9a <__fp_nan>:
     e9a:	9f ef       	ldi	r25, 0xFF	; 255
     e9c:	80 ec       	ldi	r24, 0xC0	; 192
     e9e:	08 95       	ret

00000ea0 <__fp_pscA>:
     ea0:	00 24       	eor	r0, r0
     ea2:	0a 94       	dec	r0
     ea4:	16 16       	cp	r1, r22
     ea6:	17 06       	cpc	r1, r23
     ea8:	18 06       	cpc	r1, r24
     eaa:	09 06       	cpc	r0, r25
     eac:	08 95       	ret

00000eae <__fp_pscB>:
     eae:	00 24       	eor	r0, r0
     eb0:	0a 94       	dec	r0
     eb2:	12 16       	cp	r1, r18
     eb4:	13 06       	cpc	r1, r19
     eb6:	14 06       	cpc	r1, r20
     eb8:	05 06       	cpc	r0, r21
     eba:	08 95       	ret

00000ebc <__fp_round>:
     ebc:	09 2e       	mov	r0, r25
     ebe:	03 94       	inc	r0
     ec0:	00 0c       	add	r0, r0
     ec2:	11 f4       	brne	.+4      	; 0xec8 <__fp_round+0xc>
     ec4:	88 23       	and	r24, r24
     ec6:	52 f0       	brmi	.+20     	; 0xedc <__fp_round+0x20>
     ec8:	bb 0f       	add	r27, r27
     eca:	40 f4       	brcc	.+16     	; 0xedc <__fp_round+0x20>
     ecc:	bf 2b       	or	r27, r31
     ece:	11 f4       	brne	.+4      	; 0xed4 <__fp_round+0x18>
     ed0:	60 ff       	sbrs	r22, 0
     ed2:	04 c0       	rjmp	.+8      	; 0xedc <__fp_round+0x20>
     ed4:	6f 5f       	subi	r22, 0xFF	; 255
     ed6:	7f 4f       	sbci	r23, 0xFF	; 255
     ed8:	8f 4f       	sbci	r24, 0xFF	; 255
     eda:	9f 4f       	sbci	r25, 0xFF	; 255
     edc:	08 95       	ret

00000ede <__fp_split3>:
     ede:	57 fd       	sbrc	r21, 7
     ee0:	90 58       	subi	r25, 0x80	; 128
     ee2:	44 0f       	add	r20, r20
     ee4:	55 1f       	adc	r21, r21
     ee6:	59 f0       	breq	.+22     	; 0xefe <__fp_splitA+0x10>
     ee8:	5f 3f       	cpi	r21, 0xFF	; 255
     eea:	71 f0       	breq	.+28     	; 0xf08 <__fp_splitA+0x1a>
     eec:	47 95       	ror	r20

00000eee <__fp_splitA>:
     eee:	88 0f       	add	r24, r24
     ef0:	97 fb       	bst	r25, 7
     ef2:	99 1f       	adc	r25, r25
     ef4:	61 f0       	breq	.+24     	; 0xf0e <__fp_splitA+0x20>
     ef6:	9f 3f       	cpi	r25, 0xFF	; 255
     ef8:	79 f0       	breq	.+30     	; 0xf18 <__fp_splitA+0x2a>
     efa:	87 95       	ror	r24
     efc:	08 95       	ret
     efe:	12 16       	cp	r1, r18
     f00:	13 06       	cpc	r1, r19
     f02:	14 06       	cpc	r1, r20
     f04:	55 1f       	adc	r21, r21
     f06:	f2 cf       	rjmp	.-28     	; 0xeec <__fp_split3+0xe>
     f08:	46 95       	lsr	r20
     f0a:	f1 df       	rcall	.-30     	; 0xeee <__fp_splitA>
     f0c:	08 c0       	rjmp	.+16     	; 0xf1e <__fp_splitA+0x30>
     f0e:	16 16       	cp	r1, r22
     f10:	17 06       	cpc	r1, r23
     f12:	18 06       	cpc	r1, r24
     f14:	99 1f       	adc	r25, r25
     f16:	f1 cf       	rjmp	.-30     	; 0xefa <__fp_splitA+0xc>
     f18:	86 95       	lsr	r24
     f1a:	71 05       	cpc	r23, r1
     f1c:	61 05       	cpc	r22, r1
     f1e:	08 94       	sec
     f20:	08 95       	ret

00000f22 <__fp_zero>:
     f22:	e8 94       	clt

00000f24 <__fp_szero>:
     f24:	bb 27       	eor	r27, r27
     f26:	66 27       	eor	r22, r22
     f28:	77 27       	eor	r23, r23
     f2a:	cb 01       	movw	r24, r22
     f2c:	97 f9       	bld	r25, 7
     f2e:	08 95       	ret

00000f30 <__mulsf3>:
     f30:	0e 94 ab 07 	call	0xf56	; 0xf56 <__mulsf3x>
     f34:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__fp_round>
     f38:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_pscA>
     f3c:	38 f0       	brcs	.+14     	; 0xf4c <__mulsf3+0x1c>
     f3e:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_pscB>
     f42:	20 f0       	brcs	.+8      	; 0xf4c <__mulsf3+0x1c>
     f44:	95 23       	and	r25, r21
     f46:	11 f0       	breq	.+4      	; 0xf4c <__mulsf3+0x1c>
     f48:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_inf>
     f4c:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <__fp_nan>
     f50:	11 24       	eor	r1, r1
     f52:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_szero>

00000f56 <__mulsf3x>:
     f56:	0e 94 6f 07 	call	0xede	; 0xede <__fp_split3>
     f5a:	70 f3       	brcs	.-36     	; 0xf38 <__mulsf3+0x8>

00000f5c <__mulsf3_pse>:
     f5c:	95 9f       	mul	r25, r21
     f5e:	c1 f3       	breq	.-16     	; 0xf50 <__mulsf3+0x20>
     f60:	95 0f       	add	r25, r21
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	55 1f       	adc	r21, r21
     f66:	62 9f       	mul	r22, r18
     f68:	f0 01       	movw	r30, r0
     f6a:	72 9f       	mul	r23, r18
     f6c:	bb 27       	eor	r27, r27
     f6e:	f0 0d       	add	r31, r0
     f70:	b1 1d       	adc	r27, r1
     f72:	63 9f       	mul	r22, r19
     f74:	aa 27       	eor	r26, r26
     f76:	f0 0d       	add	r31, r0
     f78:	b1 1d       	adc	r27, r1
     f7a:	aa 1f       	adc	r26, r26
     f7c:	64 9f       	mul	r22, r20
     f7e:	66 27       	eor	r22, r22
     f80:	b0 0d       	add	r27, r0
     f82:	a1 1d       	adc	r26, r1
     f84:	66 1f       	adc	r22, r22
     f86:	82 9f       	mul	r24, r18
     f88:	22 27       	eor	r18, r18
     f8a:	b0 0d       	add	r27, r0
     f8c:	a1 1d       	adc	r26, r1
     f8e:	62 1f       	adc	r22, r18
     f90:	73 9f       	mul	r23, r19
     f92:	b0 0d       	add	r27, r0
     f94:	a1 1d       	adc	r26, r1
     f96:	62 1f       	adc	r22, r18
     f98:	83 9f       	mul	r24, r19
     f9a:	a0 0d       	add	r26, r0
     f9c:	61 1d       	adc	r22, r1
     f9e:	22 1f       	adc	r18, r18
     fa0:	74 9f       	mul	r23, r20
     fa2:	33 27       	eor	r19, r19
     fa4:	a0 0d       	add	r26, r0
     fa6:	61 1d       	adc	r22, r1
     fa8:	23 1f       	adc	r18, r19
     faa:	84 9f       	mul	r24, r20
     fac:	60 0d       	add	r22, r0
     fae:	21 1d       	adc	r18, r1
     fb0:	82 2f       	mov	r24, r18
     fb2:	76 2f       	mov	r23, r22
     fb4:	6a 2f       	mov	r22, r26
     fb6:	11 24       	eor	r1, r1
     fb8:	9f 57       	subi	r25, 0x7F	; 127
     fba:	50 40       	sbci	r21, 0x00	; 0
     fbc:	9a f0       	brmi	.+38     	; 0xfe4 <__mulsf3_pse+0x88>
     fbe:	f1 f0       	breq	.+60     	; 0xffc <__mulsf3_pse+0xa0>
     fc0:	88 23       	and	r24, r24
     fc2:	4a f0       	brmi	.+18     	; 0xfd6 <__mulsf3_pse+0x7a>
     fc4:	ee 0f       	add	r30, r30
     fc6:	ff 1f       	adc	r31, r31
     fc8:	bb 1f       	adc	r27, r27
     fca:	66 1f       	adc	r22, r22
     fcc:	77 1f       	adc	r23, r23
     fce:	88 1f       	adc	r24, r24
     fd0:	91 50       	subi	r25, 0x01	; 1
     fd2:	50 40       	sbci	r21, 0x00	; 0
     fd4:	a9 f7       	brne	.-22     	; 0xfc0 <__mulsf3_pse+0x64>
     fd6:	9e 3f       	cpi	r25, 0xFE	; 254
     fd8:	51 05       	cpc	r21, r1
     fda:	80 f0       	brcs	.+32     	; 0xffc <__mulsf3_pse+0xa0>
     fdc:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_inf>
     fe0:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__fp_szero>
     fe4:	5f 3f       	cpi	r21, 0xFF	; 255
     fe6:	e4 f3       	brlt	.-8      	; 0xfe0 <__mulsf3_pse+0x84>
     fe8:	98 3e       	cpi	r25, 0xE8	; 232
     fea:	d4 f3       	brlt	.-12     	; 0xfe0 <__mulsf3_pse+0x84>
     fec:	86 95       	lsr	r24
     fee:	77 95       	ror	r23
     ff0:	67 95       	ror	r22
     ff2:	b7 95       	ror	r27
     ff4:	f7 95       	ror	r31
     ff6:	e7 95       	ror	r30
     ff8:	9f 5f       	subi	r25, 0xFF	; 255
     ffa:	c1 f7       	brne	.-16     	; 0xfec <__mulsf3_pse+0x90>
     ffc:	fe 2b       	or	r31, r30
     ffe:	88 0f       	add	r24, r24
    1000:	91 1d       	adc	r25, r1
    1002:	96 95       	lsr	r25
    1004:	87 95       	ror	r24
    1006:	97 f9       	bld	r25, 7
    1008:	08 95       	ret

0000100a <_exit>:
    100a:	f8 94       	cli

0000100c <__stop_program>:
    100c:	ff cf       	rjmp	.-2      	; 0x100c <__stop_program>
